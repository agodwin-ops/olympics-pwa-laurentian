# Multi-stage build for full-stack deployment
# Stage 1: Build Frontend
FROM node:18-alpine AS frontend-builder

WORKDIR /app
COPY apps/web/package*.json ./
RUN npm ci

COPY apps/web ./
RUN npm run build

# Stage 2: Python Backend + Serve Frontend
FROM python:3.11-slim

# Install Node.js to serve frontend
RUN apt-get update && apt-get install -y \
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Set up app directory
RUN mkdir -p /app && chown -R appuser:appuser /app
WORKDIR /app
USER appuser

# Install Python dependencies
COPY --chown=appuser:appuser apps/api/requirements.olympics.txt ./requirements.txt
RUN pip install --user --no-cache-dir -r requirements.txt
ENV PATH="/home/appuser/.local/bin:${PATH}"

# Copy backend
COPY --chown=appuser:appuser apps/api ./api/

# Copy built frontend
COPY --from=frontend-builder --chown=appuser:appuser /app/.next ./frontend/.next/
COPY --from=frontend-builder --chown=appuser:appuser /app/package.json ./frontend/
COPY --from=frontend-builder --chown=appuser:appuser /app/public ./frontend/public/
COPY --from=frontend-builder --chown=appuser:appuser /app/node_modules ./frontend/node_modules/

# Create startup script
COPY --chown=appuser:appuser <<'EOF' ./start.sh
#!/bin/bash
# Start frontend
cd /app/frontend && npm start &
# Start backend
cd /app/api && hypercorn app.main_olympics_only:app --bind 0.0.0.0:8080
EOF

RUN chmod +x ./start.sh

EXPOSE 3000 8080
CMD ["./start.sh"]